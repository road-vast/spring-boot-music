<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itcast.springboot.mapper.GiveLikeMapper">
    <!--增
        useGeneratedKeys="true" keyProperty="uid"
            添加完对象后将id属性封装到对象中
    -->
    <insert id="insertLike" useGeneratedKeys="true" keyProperty="lid">
        insert into givelike(userdyna_id,user_id)
        values(#{userdynaId}, #{userId})
    </insert>

    <!--根据id删除-->
    <delete id="deleteLike">
        delete from givelike where lid = #{lid}
    </delete>

    <!--查-->
    <!--通过id查询-->
    <select id="getLikeById" resultType="com.itcast.springboot.bean.GiveLike">
        select * from givelike where lid = #{lid}
    </select>
    <!--多个count查询：多个用户动态id查询评论人数-->
    <select id="getLikeNumsByUserDynasId" resultType="Integer">
        SELECT COUNT(userdyna_id) from userdyna LEFT JOIN givelike ON udid = userdyna_id
        GROUP BY udid HAVING udid in
        <!--
        collection：指定要遍历的集合
            list类型的参数会特殊处理封装在map中，map的key就叫list
        item：当前遍历出的元素赋值给指定的变量
        separator：指定每个元素之间的分隔符
        open:开始字符
        close:结束字符
        index:索引。遍历list的时候是索引
        ORDER BY FIELD:按指定的顺序输出
        -->
        <foreach collection="userdynasId" item="item_userdynaId" separator="," open="(" close=")">
            #{item_userdynaId}
        </foreach>
        ORDER BY FIELD(udid,
        <foreach collection="userdynasId" item="item_userdynaId" separator="," close=")">
            #{item_userdynaId}
        </foreach>
    </select>
    <!--级联查询：多个用户动态id查询评论信息和评论用户信息-->
    <resultMap type="com.itcast.springboot.bean.GiveLike" id="myLike1">
        <id column="lid" property="lid"/>
        <result column="userdyna_id" property="userdynaId"/>
        <result column="user_id" property="userId"/>
        <!--
            Collection：定义关联集合类型的属性的封装规则
            ofType：指定集合里面元素的类型
         -->
        <collection property="users" ofType="com.itcast.springboot.bean.User">
            <id column="uid" property="uid"/>
            <result column="username" property="username"/>
            <result column="session_key" property="sessionKey"/>
            <result column="avatar_url" property="avatarUrl"/>
            <result column="gender" property="gender"/>
            <result column="country" property="country"/>
            <result column="province" property="province"/>
            <result column="city" property="city"/>
            <result column="lang" property="lang"/>
        </collection>
    </resultMap>
    <select id="getLikesAndUsersByUserDynasId" resultMap="myLike1">
        select l.userdyna_id userdyna_id, l.user_id user_id,
        u.uid uid, u.username username, u.session_key session_key, u.avatar_url avatar_url,
        u.gender gender, u.country country,
        u.province province, u.city city, u.lang lang
        from givelike l
        LEFT JOIN user u
        ON u.uid = l.user_id
        where l.userdyna_id in
        <foreach collection="userdynasId" item="item_userdynaId" separator="," open="(" close=")">
            #{item_userdynaId}
        </foreach>
    </select>

    <!--多个用户动态id获取点赞详细信息-->
    <select id="getGiveLikesAndNamesByIds" resultType="com.itcast.springboot.bean.GiveLike">
        SELECT lid, userdyna_id, user_id, username from givelike
        LEFT JOIN `user` on `user`.uid = givelike.user_id
        where userdyna_id in
        <foreach collection="userdynaIds" item="item_userdynaId" separator="," open="(" close=")">
            #{item_userdynaId}
        </foreach>
    </select>

    <!--改-->
    <update id="updateLike">
        update givelike set userdyna_id=#{userdynaId}, user_id=#{userId}
        where lid=#{lid}
    </update>
</mapper>